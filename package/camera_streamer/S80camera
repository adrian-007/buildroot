#!/bin/sh
#
# Start camera capturer and streamer processes
#

[ -r /etc/default/camera ] && export $(grep -v '^#' /etc/default/camera | xargs)

PIDFILE=/run/camera.pid

run_processes() {
    RUN=1
    trap 'RUN=0' INT TERM QUIT

    while [ $RUN -ne 0 ];
    do
        pidof camera_streamer &>/dev/null
        if [ $? -ne 0 ];
        then
            camera_streamer &>/var/log/camera_streamer.log &
        fi

        pidof camera_capturer &>/dev/null
        if [ $? -ne 0 ];
        then
            camera_capturer &>/var/log/camera_capturer.log &
        fi

        usleep 200000
    done

    killall -TERM camera_capturer &>/dev/null
    killall -TERM camera_streamer &>/dev/null
}

start() {
    printf "Starting Camera Service... "
    if [ -e $PIDFILE ];
    then
        echo "Failed, service is already running"
        exit 1
    fi

    run_processes &
    echo $! > $PIDFILE
    echo "OK"
    exit 0
}

stop() {
    printf "Stopping Camera Service... "
    if [ ! -e $PIDFILE ];
    then
        echo "Failed, service is not running"
        exit 1
    fi

    PID=$(cat $PIDFILE)
    rm -f $PIDFILE &>/dev/null
    kill -TERM $PID &>/dev/null

    if [ $? -ne 0 ];
    then
        echo "Failed"
        exit 1
    fi

    echo "OK"
    exit 0
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        stop
        start
        ;;
  *)
        echo "Usage: $0 {start|stop|restart|reload}"
        exit 1
esac

exit $?

